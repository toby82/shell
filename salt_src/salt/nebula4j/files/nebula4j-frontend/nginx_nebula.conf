<%
# 变量转义的方式
UPLOAD_FIELD_NAME='${UPLOAD_FIELD_NAME}'
%>
upstream nebula4j_backend {
    # 配置API地址，可以是任意API地址
    % for server in servers:
    server ${server} weight=1;
    % endfor
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

limit_conn_zone $binary_remote_addr zone=perip:10m;
limit_conn_zone $server_name zone=perserver:20m;
limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;

server {
    listen  80  so_keepalive=5m:15:8;
    server_name  localhost;
    client_max_body_size  50G;
    sendfile           on; 
    tcp_nopush        on; 
    gzip              on; 
    gzip_min_length 1000;
    gzip_http_version 1.0;
    gzip_buffers 4 8k; 
    gzip_types text/css text/xml application/javascript application/json;

    # 上传path配置
    location = /pulsar/file/upload {
        # 转到后台处理URL
        upload_pass   @after_upload ;

        # 临时保存路径 ,可以使用散列
        upload_store ${upload_path} ;
          upload_resumable on ;
        #upload_max_file_size 20000000000; # 可以生效,字节数

        # 上传文件的权限，rw表示读写 r只读
        upload_store_access all:rw;
        # 这里写入http报头，pass到后台页面后能获取这里set的报头字段
        upload_set_form_field "${UPLOAD_FIELD_NAME}_name" $upload_file_name;
        upload_set_form_field "${UPLOAD_FIELD_NAME}_content_type" $upload_content_type;
        upload_set_form_field "${UPLOAD_FIELD_NAME}_path" $upload_tmp_path;
        upload_set_form_field "${UPLOAD_FIELD_NAME}_type" "nginx_upload";

        # Upload模块自动生成的一些信息，如文件大小与文件md5值
        #upload_aggregate_form_field "${UPLOAD_FIELD_NAME}_md5" $upload_file_md5;
        upload_aggregate_form_field "${UPLOAD_FIELD_NAME}_size" $upload_file_size;
        # 允许的字段，允许全部可以 "^.*$"
        upload_pass_form_field "^.*$";

        # 每秒字节速度控制，0表示不受控制，默认0
        upload_limit_rate 0;
        # 如果pass页面是以下状态码，就删除此次上传的临时文件
        upload_cleanup 400 404 499 500-505;
    }

   location = /pulsar/file/logo {
        upload_pass   @after_upload ;

        # 临时保存路径,可以使用散列
        upload_store ${upload_path}logo/;
        upload_resumable on ;
        upload_max_file_size 20000000; # 可以生效,字节数

        # 上传文件的权限，rw表示读写 r只读
        upload_store_access all:rw;
        # 这里写入http报头，pass到后台页面后能获取这里set的报头字段
        upload_set_form_field "${UPLOAD_FIELD_NAME}_name" $upload_file_name;
        upload_set_form_field "${UPLOAD_FIELD_NAME}_content_type" $upload_content_type;
        upload_set_form_field "${UPLOAD_FIELD_NAME}_path" $upload_tmp_path;
        upload_set_form_field "${UPLOAD_FIELD_NAME}_type" "nginx_upload";
        upload_set_form_field "${UPLOAD_FIELD_NAME}_folder" "logo";

        # Upload模块自动生成的一些信息，如文件大小与文件md5值
        #upload_aggregate_form_field "${UPLOAD_FIELD_NAME}_md5" $upload_file_md5;
        upload_aggregate_form_field "${UPLOAD_FIELD_NAME}_size" $upload_file_size;
        # 允许的字段，允许全部可以 "^.*$"
        upload_pass_form_field "^.*$";

        # 每秒字节速度控制，0表示不受控制，默认0 
        upload_limit_rate 0;
        # 如果pass页面是以下状态码，就删除此次上传的临时文件
        upload_cleanup 400 404 499 500-505;
    }

    location @after_upload {
        proxy_pass   http://nebula4j_backend;
        rewrite ^(.+) /pulsar/file/nginxUpload break;
    }

    location / {
      	root ${location_root};
	try_files $uri $uri/ /index.html =404;
    }
    location ^~ /download/ {
        alias /datas/download/;
    }

    location  ^~ /image_store/ {
        keepalive_timeout 500 300;
	    lingering_time 10m;
	    lingering_timeout 5m;
	    limit_rate_after 100M;
	    limit_rate 40M;
	    send_timeout 10m;
        alias    ${upload_path};
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;
    }


    location  ^~ /pulsar/images/file/ {
        limit_rate 10M;
        proxy_pass http://nebula4j_backend;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    #消息通知的后端websocket服务地址
    location ^~ /pulsar/notify/ {
        proxy_pass http://nebula4j_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        #rewrite ^/pulsar/(.+) /$1 break;
    }  

    location ^~ /pulsar/ {
        proxy_pass http://nebula4j_backend;
	proxy_request_buffering off;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #rewrite ^/pulsar/(.+) /$1 break;
    }   
}
