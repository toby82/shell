DROP TABLE
IF EXISTS ACTION_LOG;

CREATE TABLE `ACTION_LOG` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`RELATION_ID` VARCHAR (50) DEFAULT NULL,
	`RESOURCE_ID` VARCHAR (50) NOT NULL,
	`RESOURCE_NAME` VARCHAR (128) DEFAULT NULL,
	`RESOURCE_TYPE` TINYINT (3) NOT NULL,
	`WHITE_HOLE_RESOURCE`  TINYINT(1) NOT NULL DEFAULT '0',
	`ACTION` TINYINT (3) NOT NULL DEFAULT '0',
	`USER_NAME` VARCHAR (50) NOT NULL,
	`TENANT_ID` VARCHAR (50) NOT NULL,
	`STATUS` TINYINT (3) NOT NULL DEFAULT '0',
	`SEND_STATUS` TINYINT (1) NOT NULL DEFAULT '0',
	`MESSAGE` VARCHAR (255) NOT NULL,
	`TASK_TAG` VARCHAR (50) DEFAULT NULL,
	`PARAMS` VARCHAR (1000) DEFAULT NULL,
	`ERROR_LOG` VARCHAR (255) DEFAULT NULL,
	`CREATE_DATE` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	`MODIFY_DATE` TIMESTAMP NULL DEFAULT NULL,
	`MODIFIER` VARCHAR (50) DEFAULT NULL,
	`TIMEOUT` BIGINT NULL,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS ACTION_DETAIL;

CREATE TABLE ACTION_DETAIL (
	ID INT (11) NOT NULL AUTO_INCREMENT,
	VCENTER_NAME VARCHAR (100) DEFAULT NULL,
	CLUSTER_NAME VARCHAR (200) DEFAULT NULL COMMENT '填写规则：CLUSTER_A,CLUSTER_B',
	RESOURCE_ID VARCHAR (50) DEFAULT NULL,
	RESOURCE_NAME VARCHAR (128) DEFAULT NULL,
	RESOURCE_TYPE TINYINT (3) NOT NULL,
	ACTION TINYINT (3) NOT NULL DEFAULT 0,
	TASK_TAG VARCHAR (50) NOT NULL,
	ERROR_LOG VARCHAR (255) DEFAULT NULL,
	TUBE_TASK_ID INT (11) DEFAULT NULL,
	CREATE_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	MODIFY_DATE TIMESTAMP NULL DEFAULT NULL,
	PRIMARY KEY (ID)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `LOGIN_LOG`;

CREATE TABLE `LOGIN_LOG` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`LOGIN_IP` VARCHAR (50) NOT NULL,
	`BROWSER` VARCHAR (255) NOT NULL,
	`LOGIN_DATE` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	`USER_NAME` VARCHAR (50) NOT NULL,
	`STATUS` TINYINT (3) NOT NULL DEFAULT '0',
	`TENANT_ID` VARCHAR (100) NOT NULL,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `ALARM_LOG`;

CREATE TABLE `ALARM_LOG` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`TENANT_ID` VARCHAR (50) NOT NULL,
	`TENANT_NAME` VARCHAR (50) NOT NULL,
	`RESOURCE_ID` VARCHAR (50) NOT NULL,
	`RESOURCE_TYPE` TINYINT (3) NOT NULL,
	`RESOURCE_NAME` VARCHAR (50) DEFAULT NULL,
	`ALARM_ID` VARCHAR (50) NOT NULL DEFAULT '0',
	`ALARM_NAME` VARCHAR (50) NOT NULL,
	`ALARM_VAL` VARCHAR (255) DEFAULT NULL,
	`STATUS` VARCHAR (50) NOT NULL DEFAULT '0',
	`CREATE_DATE` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `DICTIONARY`;

CREATE TABLE `DICTIONARY` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`TYPE` VARCHAR (50) DEFAULT NULL,
	`KEY` VARCHAR (50) NOT NULL,
	`CONTEXT` VARCHAR (255) NOT NULL,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `SERVICE_MODULE`;

CREATE TABLE `SERVICE_MODULE` (
	`ID` VARCHAR (50) NOT NULL,
	`NAME` VARCHAR (100) NOT NULL,
	`SERVICE_TYPE` TINYINT (1) NOT NULL,
	`POOL_ID` INT (11) NULL,
	`DESCRIPTION` VARCHAR (255) NULL,
	`DISABLED` TINYINT (1) NOT NULL DEFAULT 0,
	`DELETED` TINYINT (1) NOT NULL DEFAULT 0,
	`CREATE_DATE` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	`UPDATE_DATE` TIMESTAMP NULL DEFAULT NULL,
	PRIMARY KEY (`ID`)
) DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `POOL`;

CREATE TABLE `POOL` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`NAME` VARCHAR (100) NOT NULL,
	`VIRTUAL_TYPE` VARCHAR (100) NULL,
	`STRATEGY` TINYINT (3) NOT NULL DEFAULT 0,
	`TOTAL_VCPU` INT (10) NOT NULL DEFAULT 0,
	`TOTAL_MEM` INT (10) NOT NULL DEFAULT 0,
	`TOTAL_DISK` INT (10) NOT NULL DEFAULT 0,
	`USAGE_VCPU` INT (10) NOT NULL DEFAULT 0,
	`USAGE_MEM` INT (10) NOT NULL DEFAULT 0,
	`USAGE_DISK` INT (10) NOT NULL DEFAULT 0,
	`DISABLED` TINYINT (1) NOT NULL DEFAULT 0,
	`DELETED` TINYINT (1) NOT NULL DEFAULT 0,
	`DESCRIPTION` VARCHAR (255) NULL,
	`UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `POOL_AVAILABLE_ZONE`;

CREATE TABLE `POOL_AVAILABLE_ZONE` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`ZONE_NAME` VARCHAR (100) NOT NULL,
	`POOL_ID` INT (11) NOT NULL,
	`TOTAL_VCPU` INT (10) NOT NULL DEFAULT 0,
	`TOTAL_MEM` INT (10) NOT NULL DEFAULT 0,
	`TOTAL_DISK` INT (10) NOT NULL DEFAULT 0,
	`VCPU_USAGE` INT (10) NOT NULL DEFAULT 0,
	`MEM_USAGE` INT (10) NOT NULL DEFAULT 0,
	`DISK_USAGE` INT (10) NOT NULL DEFAULT 0,
	`DELETED` TINYINT (1) NOT NULL DEFAULT 0,
	`UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `POOL_VOLUME_TYPE`;

CREATE TABLE `POOL_VOLUME_TYPE` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`TYPE_ID` VARCHAR (100) NOT NULL,
	`TYPE_NAME` VARCHAR (100) NOT NULL,
	`POOL_ID` INT (11) NOT NULL,
	`UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `POOL_NETWORK`;

CREATE TABLE `POOL_NETWORK` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`NETWORK_ID` VARCHAR (100) NOT NULL,
	`NETWORK_NAME` VARCHAR (100) NOT NULL,
	`POOL_ID` INT (11) NOT NULL,
	`TOTAL_SUBNET` INT (10) NOT NULL DEFAULT 0,
	`TOTAL_IP` INT (10) NOT NULL DEFAULT 0,
	`IP_USAGE` INT (10) NOT NULL DEFAULT 0,
	`DELETED` TINYINT (1) NOT NULL DEFAULT 0,
	`UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
);

DROP TABLE IF EXISTS `NETWORK_USAGE`;

CREATE TABLE `NETWORK_USAGE` (
	`NETWORK_ID` VARCHAR (100) NOT NULL,
	`NETWORK_NAME` VARCHAR (100) NOT NULL,
	`TOTAL_SUBNET` INT (10) NOT NULL DEFAULT 0,
	`TOTAL_IP` INT (10) NOT NULL DEFAULT 0,
	`IP_USAGE` INT (10) NOT NULL DEFAULT 0,
	`UPDATING` TINYINT (1) NOT NULL DEFAULT 0,
	`UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`NETWORK_ID`)
);

DROP TABLE
IF EXISTS `POOL_TAG`;

CREATE TABLE `POOL_TAG` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`POOL_ID` INT (11) NOT NULL,
	`TAG_KEY` VARCHAR (50) NOT NULL,
	`TAG_VALUE` VARCHAR (100) NOT NULL,
	`UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `POOL_USAGE`;

CREATE TABLE `POOL_USAGE` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`POOL_ID` INT (11) NOT NULL,
	`VCPU` INT (10) NOT NULL DEFAULT 0,
	`MEM` INT (10) NOT NULL DEFAULT 0,
	`DISK` INT (10) NOT NULL DEFAULT 0,
	`IP_ADDRESS` INT (10) NOT NULL DEFAULT 0,
	`CREATE_DATE` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `SERVICE_INSTANCE`;

CREATE TABLE `SERVICE_INSTANCE` (
	`ID` VARCHAR (100) NOT NULL,
	`MODULE_ID` VARCHAR (50) NOT NULL,
	`NAME` VARCHAR (100) NULL,
	`STATUS` TINYINT (1) NULL,
	`IP_ADDRESS` VARCHAR (100) NOT NULL,
	`AZ_NAME` VARCHAR (100) NULL,
	`VOLUME_TYPE_ID` VARCHAR (100) NULL,
	`NETWORK_ID` VARCHAR (100) NULL,
	`POOL_ID` INT (11)  NULL,
	`DELETED` TINYINT (1) NOT NULL DEFAULT 0,
	`UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `SYNCHRONIZATION`;

CREATE TABLE `SYNCHRONIZATION` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`TAG` VARCHAR (100) NOT NULL,
	`STATUS` TINYINT (1) NOT NULL DEFAULT 0,
	`UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE
IF EXISTS `VARIABLE_LIST`;

CREATE TABLE `VARIABLE_LIST` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`MODULE_ID` VARCHAR (50) NOT NULL,
	`REQUIRED` TINYINT (3) NOT NULL DEFAULT 0,
	`PARAM_KEY` VARCHAR (50) NOT NULL,
	`PARAM_TYPE` VARCHAR (50) NULL,
	`MIN_VALUE` VARCHAR (50) NULL,
	`MAX_VALUE` VARCHAR (50) NULL,
	`DEFAULT_VALUE` VARCHAR (500) NULL,
	`DESCRIPTION` VARCHAR (255) NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
);

INSERT INTO `DICTIONARY` VALUES (1, 'default', 'SYSTEM_VERSION', 'V2.1.5');
INSERT INTO `DICTIONARY` VALUES (2, 'default', 'SYSTEM_COPYRIGHT', '中电科华云信息技术有限公司');
INSERT INTO `DICTIONARY` VALUES (3, 'default', 'SYSTEM_VIRTUAL_VERSION', '2015.10 V1');
INSERT INTO `DICTIONARY` VALUES (4, 'default', 'SYSTEM_NAME', '电科华云基础设施管理云平台');
INSERT INTO `DICTIONARY` VALUES (5, 'default', 'SYSTEM_LOGO_S_URL', 'assets/images/chinacloud.png');
INSERT INTO `DICTIONARY` VALUES (6, 'default', 'SYSTEM_LOGO_L_URL', 'assets/images/chinacloud.png');
INSERT INTO `DICTIONARY` VALUES (7, 'default', 'SYSTEM_FAVICON_URL', 'assets/images/favicon.ico');
INSERT INTO `DICTIONARY` VALUES (8, 'hypervisor_type', 'qemu', 'Qemu');
INSERT INTO `DICTIONARY` VALUES (9, 'hypervisor_type', 'vmware', 'VMware');
INSERT INTO `DICTIONARY` VALUES (10, 'hypervisor_type', 'hyperv', 'Hyperv');
INSERT INTO `DICTIONARY` VALUES (11, 'hypervisor_type', 'ironic', 'Ironic');
INSERT INTO `DICTIONARY` VALUES (12, 'volume_type', 'qemu', 'rbd');
INSERT INTO `DICTIONARY` VALUES (13, 'volume_type', 'qemu', 'iscsi');
INSERT INTO `DICTIONARY` VALUES (14, 'volume_type', 'qemu', 'glusterfs');
INSERT INTO `DICTIONARY` VALUES (15, 'volume_type', 'qemu', 'ocfs2');
INSERT INTO `DICTIONARY` VALUES (16, 'volume_type', 'vmware', 'iscsi');
INSERT INTO `DICTIONARY` VALUES (17, 'volume_type', 'vmware', 'vmdk');
INSERT INTO `DICTIONARY` VALUES (18, 'volume_type', 'hyperv', 'iscsi');


DROP TABLE IF EXISTS `IMAGE_TEMPLATE`;

CREATE TABLE `IMAGE_TEMPLATE` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`NAME` VARCHAR (100) NOT NULL,
	`MINI_DISK` TINYINT (1) NOT NULL,
	`OS_TYPE` VARCHAR (100) NOT NULL,
	`IMAGE_ID` VARCHAR (100) NULL,
	`IMAGE_IDS` VARCHAR (1000) NULL,
	`CREATE_DATE` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	`UPDATE_DATE` TIMESTAMP NULL DEFAULT NULL,
	PRIMARY KEY (`ID`)
) DEFAULT CHARSET = UTF8;

DROP TABLE IF EXISTS `RESOURCE_TAG`;

CREATE TABLE `RESOURCE_TAG` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(128) NOT NULL,
  `TAG_KEY` VARCHAR(128) NOT NULL,
  `TAG_VALUE` VARCHAR(128) NOT NULL,
  `USAGES` INT(6) NOT NULL DEFAULT 0,
  `DELETED` TINYINT(1) NOT NULL DEFAULT '0',
  `UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

INSERT INTO `RESOURCE_TAG` VALUES (1, '高速存储', 'sla:ssd', 'true', 0, 0, now());
INSERT INTO `RESOURCE_TAG` VALUES (2, '普通存储', 'sla:ssd', 'false', 0, 0, now());
INSERT INTO `RESOURCE_TAG` VALUES (3, '高性能cpu', 'sla:cpu', 'high', 0, 0, now());
INSERT INTO `RESOURCE_TAG` VALUES (4, '普通cpu', 'sla:cpu', 'normal', 0, 0, now());
INSERT INTO `RESOURCE_TAG` VALUES (5, '低性能cpu', 'sla:cpu', 'low', 0, 0, now());
INSERT INTO `RESOURCE_TAG` VALUES (6, '高效内存', 'sla:mem', 'true', 0, 0, now());
INSERT INTO `RESOURCE_TAG` VALUES (7, '普通内存', 'sla:mem', 'false', 0, 0, now());

DROP TABLE IF EXISTS `TENANT_USAGE`;

CREATE TABLE `TENANT_USAGE` (
	`TENANT_ID` VARCHAR (100) NOT NULL,
	`TENANT_NAME` VARCHAR (100) NOT NULL,
	`INSTANCE` INT (10) NOT NULL DEFAULT 0,
	`VCPU` INT (10) NOT NULL DEFAULT 0,
	`MEM` INT (10) NOT NULL DEFAULT 0,
	`DISK` INT (10) NOT NULL DEFAULT 0,
	`IP_USAGE` INT (10) NOT NULL DEFAULT 0,
	`FLOATING_IP` INT (10) NOT NULL DEFAULT 0,
	`VOLUME_NUM` INT (10) NOT NULL DEFAULT 0,
	`VOLUME_SIZE` INT (10) NOT NULL DEFAULT 0,
	`UPDATING` TINYINT (1) NOT NULL DEFAULT 0,
	`UPDATE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`TENANT_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

DROP TABLE IF EXISTS `HOST_AGGREGATE`;

CREATE TABLE `HOST_AGGREGATE` (
	`ID` INT (11) NOT NULL ,
	`AGGREGATE_NAME` VARCHAR (100) NOT NULL,
	`ZONE_NAME` VARCHAR (100) NOT NULL,
	`HYPERVISOR_TYPE` VARCHAR (100) NOT NULL,
	`DELETED` TINYINT (1) NOT NULL DEFAULT 0,
	`UPDATE_DATE` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;

DROP TABLE IF EXISTS `AVAILABILITY_ZONE`;

CREATE TABLE `AVAILABILITY_ZONE` (
	`ID` INT (11) NOT NULL AUTO_INCREMENT,
	`ZONE_NAME` VARCHAR (100) NOT NULL UNIQUE,
	`HYPERVISOR_TYPE` VARCHAR (100) NOT NULL,
	`UPDATE_DATE` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (`ID`)
) ENGINE = INNODB DEFAULT CHARSET = UTF8;
